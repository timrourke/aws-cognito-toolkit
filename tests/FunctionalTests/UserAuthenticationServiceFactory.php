<?php

declare(strict_types=1);

namespace Incognito\FunctionalTests;

use Aws\CognitoIdentityProvider\CognitoIdentityProviderClient;
use Aws\Credentials\CredentialProvider;
use Incognito\CognitoClient\CognitoCredentials;
use Incognito\CognitoClient\UserAuthenticationService;
use RuntimeException;

/**
 * Class UserAuthenticationServiceFactory
 *
 * Useful for instantiating a UserAuthenticationService instance for tests based
 * on the Terraform state generated by the automated provisioning
 *
 * @see \Incognito\FunctionalTests\TerraformExtension
 * @package Incognito\FunctionalTests
 */
class UserAuthenticationServiceFactory
{
    /**
     * @var \Incognito\CognitoClient\UserAuthenticationService|null
     */
    private static $userAuthenticationService;

    private function __construct()
    {
    }

    public static function build(): UserAuthenticationService
    {
        if (!is_null(self::$userAuthenticationService)) {
            return self::$userAuthenticationService;
        }

        $instance = new self;

        return $instance->createUserAuthenticationService();
    }

    private function createUserAuthenticationService(): UserAuthenticationService
    {
        $client = $this->getCognitoClient();
        $credentials = $this->getCredentials();

        return new UserAuthenticationService($client, $credentials);
    }

    private function getTerraformStateFilePath(): string
    {
        return __DIR__ . '/terraform/terraform.tfstate';
    }

    private function openTerraformStateFile()
    {
        $filePath = $this->getTerraformStateFilePath();
        $handle = fopen($filePath, 'rb');

        if (false === $handle) {
            throw new RuntimeException(

                sprintf('Unable to open file "%s": %s',
                    $filePath,
                    print_r(error_get_last(), true)
                )
            );
        }

        return $handle;
    }

    private function getCredentials(): CognitoCredentials
    {
        $handle = $this->openTerraformStateFile();
        $contents = fread($handle, (int) filesize($this->getTerraformStateFilePath()));
        $json = json_decode((string) $contents, true);
        $resources = $json['modules'][0]['resources'];

        return new CognitoCredentials(
            $resources['aws_cognito_user_pool_client.incognito_test_client']['primary']['id'],
            $resources['aws_cognito_user_pool_client.incognito_test_client']['primary']['attributes']['client_secret'],
            $resources['aws_cognito_user_pool.incognito_test_user_pool']['primary']['id']
        );
    }

    private function getCognitoClient(): CognitoIdentityProviderClient
    {
        return new CognitoIdentityProviderClient([
            'credentials' => CredentialProvider::env(),
            'region' => getenv('AWS_DEFAULT_REGION'),
            'version' => 'latest',
        ]);
    }
}